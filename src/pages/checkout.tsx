import { Disclosure } from "@headlessui/react";
import { TrashIcon } from "@heroicons/react/24/outline";
import { type NextPage } from "next";
import Head from "next/head";
import Image from "next/image";
import { Button } from "~/components/Button";
import { calculateSubtotal } from "~/components/CartDropdown";
import { Input } from "~/components/Input";
import { Label } from "~/components/Label";
import { useCartStore } from "~/lib/cart";
import { DefaultLayout } from "~/templates/Default";
import { api } from "~/utils/api";
import { intlCurrency } from "~/utils/intl";

const Checkout: NextPage = () => {
  const items = useCartStore((state) => state.getItems());
  const updateQty = useCartStore((state) => state.updateQty);
  const removeItem = useCartStore((state) => state.remove);

  const fetchCartProducts = api.product.fetchMany.useQuery(
    items.map((p) => p._ref)
  );

  const subtotal = intlCurrency(
    calculateSubtotal(items, fetchCartProducts.data ?? [])
  );

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <DefaultLayout>
        <div className="px-4 py-6 sm:px-0">
          <>
            <main className="lg:flex lg:min-h-full lg:flex-row-reverse lg:overflow-hidden">
              <h1 className="sr-only">Checkout</h1>

              {/* Mobile order summary */}
              <section
                aria-Labelledby="order-heading"
                className="bg-gray-50 px-4 py-6 sm:px-6 lg:hidden"
              >
                <Disclosure as="div" className="mx-auto max-w-lg">
                  {({ open }) => (
                    <>
                      <div className="flex items-center justify-between">
                        <h2
                          id="order-heading"
                          className="text-lg font-medium text-gray-900"
                        >
                          Seu pedido
                        </h2>
                        <Disclosure.Button className="font-medium text-slate-600 hover:text-slate-500">
                          {open ? (
                            <span>Mostrar itens</span>
                          ) : (
                            <span>Esconder</span>
                          )}
                        </Disclosure.Button>
                      </div>

                      <Disclosure.Panel>
                        <ul
                          role="list"
                          className="divide-y divide-gray-200 border-b border-gray-200"
                        >
                          {fetchCartProducts.data?.map((product) => (
                            <li
                              key={[product.origin, product.id].join("_")}
                              className="flex py-6 px-4 sm:px-6"
                            >
                              <div className="flex-shrink-0">
                                <Image
                                  src={product.gallery.at(0) ?? ""}
                                  alt={product.name}
                                  width={160}
                                  height={160}
                                  className="h-40 w-40 rounded-md"
                                />
                              </div>

                              <div className="ml-6 flex flex-1 flex-col">
                                <div className="flex">
                                  <div className="min-w-0 flex-1">
                                    <h4 className="text-sm">
                                      <span className="font-medium text-gray-700 hover:text-gray-800">
                                        {product.name}
                                      </span>
                                    </h4>
                                    {Object.keys(product.details).map(
                                      (elem) => (
                                        <p
                                          className="mt-1 text-sm text-gray-500"
                                          key={elem}
                                        >
                                          {elem}
                                        </p>
                                      )
                                    )}
                                  </div>

                                  <div className="ml-4 flow-root flex-shrink-0">
                                    <Button
                                      type="button"
                                      variant={"destructive"}
                                      onClick={() =>
                                        removeItem(
                                          [product.origin, product.id].join("_")
                                        )
                                      }
                                      size={"sm"}
                                    >
                                      <span className="sr-only">Retirar</span>
                                      <TrashIcon
                                        className="h-5 w-5"
                                        aria-hidden="true"
                                      />
                                    </Button>
                                  </div>
                                </div>

                                <div className="flex flex-col items-start justify-between gap-2 pt-4">
                                  <p className="mt-1 text-base  text-gray-900">
                                    {intlCurrency(
                                      product.discount
                                        ? product.discount_price
                                        : product.price
                                    )}
                                  </p>

                                  <div className="w-full">
                                    <label
                                      htmlFor="quantity"
                                      className="sr-only"
                                    >
                                      Quantidade
                                    </label>
                                    <select
                                      id="quantity"
                                      name="quantity"
                                      value={
                                        items.find(
                                          (cElem) =>
                                            cElem._ref ===
                                            [product.origin, product.id].join(
                                              "_"
                                            )
                                        )?.quantity
                                      }
                                      onChange={(e) =>
                                        updateQty(
                                          {
                                            id: product.id,
                                            origin: product.origin,
                                          },
                                          parseInt(e.target.value) ?? 1
                                        )
                                      }
                                      className=" w-full rounded-md border border-gray-300 text-left text-base text-gray-700 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 sm:text-sm"
                                    >
                                      <option value={1}>1</option>
                                      <option value={2}>2</option>
                                      <option value={3}>3</option>
                                      <option value={4}>4</option>
                                      <option value={5}>5</option>
                                      <option value={6}>6</option>
                                      <option value={7}>7</option>
                                      <option value={8}>8</option>
                                    </select>
                                  </div>
                                </div>
                              </div>
                            </li>
                          ))}
                        </ul>

                        <dl className="mt-10 space-y-6 text-sm font-medium text-gray-500">
                          <div className="flex justify-between">
                            <dt>Subtotal</dt>
                            <dd className="text-gray-900">{subtotal}</dd>
                          </div>
                        </dl>
                      </Disclosure.Panel>

                      <p className="mt-6 flex items-center justify-between border-t border-gray-200 pt-6 text-sm font-medium text-gray-900">
                        <span className="text-base">Total</span>
                        <span className="text-base">{subtotal}</span>
                      </p>
                    </>
                  )}
                </Disclosure>
              </section>

              {/* Order summary */}
              <section
                aria-Labelledby="summary-heading"
                className="hidden w-full max-w-md flex-col bg-gray-50 lg:flex"
              >
                <h2 id="summary-heading" className="sr-only">
                  Order summary
                </h2>

                <ul
                  role="list"
                  className="flex-auto divide-y divide-gray-200 overflow-y-auto px-6"
                >
                  {fetchCartProducts.data?.map((product) => (
                    <li
                      key={[product.origin, product.id].join("_")}
                      className="flex py-6 px-4 sm:px-6"
                    >
                      <div className="flex-shrink-0">
                        <Image
                          src={product.gallery.at(0) ?? ""}
                          alt={product.name}
                          width={80}
                          height={80}
                          className="h-20 w-20 rounded-md"
                        />
                      </div>

                      <div className="ml-6 flex flex-1 flex-col">
                        <div className="flex">
                          <div className="min-w-0 flex-1">
                            <h4 className="text-sm">
                              <span className="font-medium text-gray-700 hover:text-gray-800">
                                {product.name}
                              </span>
                            </h4>
                            {Object.keys(product.details).map((elem) => (
                              <p
                                className="mt-1 text-sm text-gray-500"
                                key={elem}
                              >
                                {elem}
                              </p>
                            ))}
                          </div>

                          <div className="ml-4 flow-root flex-shrink-0">
                            <Button
                              type="button"
                              variant={"destructive"}
                              size={"sm"}
                              onClick={() =>
                                removeItem(
                                  [product.origin, product.id].join("_")
                                )
                              }
                            >
                              <span className="sr-only">Remove</span>
                              <TrashIcon
                                className="h-5 w-5"
                                aria-hidden="true"
                              />
                            </Button>
                          </div>
                        </div>

                        <div className="flex flex-1 items-center justify-between pt-4">
                          <p className="mt-1 text-sm font-medium text-gray-900">
                            {intlCurrency(
                              product.discount
                                ? product.discount_price
                                : product.price
                            )}
                          </p>

                          <div className="ml-4">
                            <label htmlFor="quantity" className="sr-only">
                              Quantidade
                            </label>
                            <select
                              id="quantity"
                              name="quantity"
                              value={
                                items.find(
                                  (cElem) =>
                                    cElem._ref ===
                                    [product.origin, product.id].join("_")
                                )?.quantity
                              }
                              onChange={(e) =>
                                updateQty(
                                  {
                                    id: product.id,
                                    origin: product.origin,
                                  },
                                  parseInt(e.target.value) ?? 1
                                )
                              }
                              className="rounded-md border border-gray-300 text-left text-base font-medium text-gray-700 shadow-sm focus:border-indigo-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 sm:text-sm"
                            >
                              <option value={1}>1</option>
                              <option value={2}>2</option>
                              <option value={3}>3</option>
                              <option value={4}>4</option>
                              <option value={5}>5</option>
                              <option value={6}>6</option>
                              <option value={7}>7</option>
                              <option value={8}>8</option>
                            </select>
                          </div>
                        </div>
                      </div>
                    </li>
                  ))}
                </ul>

                <div className="sticky bottom-0 flex-none border-t border-gray-200 bg-gray-50 p-6">
                  <dl className="mt-10 space-y-6 text-sm font-medium text-gray-500">
                    <div className="flex justify-between">
                      <dt>Subtotal</dt>
                      <dd className="text-gray-900">{subtotal}</dd>
                    </div>
                    <div className="flex items-center justify-between border-t border-gray-200 pt-6 text-gray-900">
                      <dt>Total</dt>
                      <dd className="text-base">{subtotal}</dd>
                    </div>
                  </dl>
                </div>
              </section>

              {/* Checkout form */}
              <section
                aria-labelledby="payment-heading"
                className="flex-auto overflow-y-auto px-4 pt-12 pb-16 sm:px-6 sm:pt-16 lg:px-8 lg:pt-0 lg:pb-24"
              >
                <h2 id="payment-heading" className="sr-only">
                  Payment and shipping details
                </h2>

                <div className="mx-auto max-w-lg lg:pt-16">
                  <form className="mt-6">
                    <div className="grid grid-cols-12 gap-y-6 gap-x-4">
                      <div className="col-span-full">
                        <Label
                          htmlFor="name-on-card"
                          className="block text-sm font-medium text-gray-700"
                        >
                          Nome no cartão
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            id="name-on-card"
                            name="name-on-card"
                            autoComplete="cc-name"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-full">
                        <Label
                          htmlFor="card-number"
                          className="block text-sm font-medium text-gray-700"
                        >
                          Número do Cartão
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            id="card-number"
                            name="card-number"
                            autoComplete="cc-number"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-8 sm:col-span-9">
                        <Label
                          htmlFor="expiration-date"
                          className="block text-sm font-medium text-gray-700"
                        >
                          Validade (MM/YY){" "}
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            name="expiration-date"
                            id="expiration-date"
                            autoComplete="cc-exp"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-4 sm:col-span-3">
                        <Label
                          htmlFor="cvc"
                          className="block text-sm font-medium text-gray-700"
                        >
                          CVC
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            name="cvc"
                            id="cvc"
                            autoComplete="csc"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-full">
                        <Label
                          htmlFor="address"
                          className="block text-sm font-medium text-gray-700"
                        >
                          Endereço
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            id="address"
                            name="address"
                            autoComplete="street-address"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-full sm:col-span-4">
                        <Label
                          htmlFor="city"
                          className="block text-sm font-medium text-gray-700"
                        >
                          Cidade
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            id="city"
                            name="city"
                            autoComplete="address-level2"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-full sm:col-span-4">
                        <Label
                          htmlFor="region"
                          className="block text-sm font-medium text-gray-700"
                        >
                          Estado
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            id="region"
                            name="region"
                            autoComplete="address-level1"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>

                      <div className="col-span-full sm:col-span-4">
                        <Label
                          htmlFor="postal-code"
                          className="block text-sm font-medium text-gray-700"
                        >
                          CEP
                        </Label>
                        <div className="mt-1">
                          <Input
                            type="text"
                            id="postal-code"
                            name="postal-code"
                            autoComplete="postal-code"
                            className="block w-full rounded-md border-gray-300 shadow-sm focus:border-slate-500 focus:ring-slate-500 sm:text-sm"
                          />
                        </div>
                      </div>
                    </div>

                    <Button
                      type="submit"
                      className="mt-4 w-full"
                      variant={"subtle"}
                      disabled={items.length === 0}
                    >
                      Pagar
                    </Button>
                  </form>
                </div>
              </section>
            </main>
          </>
        </div>
      </DefaultLayout>
    </>
  );
};

export default Checkout;
